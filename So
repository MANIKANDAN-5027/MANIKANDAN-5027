from flask import Flask, render_template, request, redirect, url_for
import os
import pandas as pd
import plotly.express as px
from werkzeug.utils import secure_filename

app = Flask(__name__)
app.config['UPLOAD_FOLDER'] = 'uploads'

# Ensure upload folder exists
os.makedirs(app.config['UPLOAD_FOLDER'], exist_ok=True)

@app.route('/', methods=['GET', 'POST'])
def index():
    if request.method == 'POST':
        file = request.files['datafile']
        if file:
            filename = secure_filename(file.filename)
            filepath = os.path.join(app.config['UPLOAD_FOLDER'], filename)
            file.save(filepath)
            return redirect(url_for('results', filename=filename))
    return render_template('index.html')

@app.route('/results/<filename>')
def results(filename):
    filepath = os.path.join(app.config['UPLOAD_FOLDER'], filename)
    df = pd.read_csv(filepath)

    # Assumptions
    # Columns: ['EmployeeID', 'Name', 'Department', 'Month', 'PerformanceScore', 'TasksCompleted']

    # KPI Calculations
    avg_perf = df['PerformanceScore'].mean()
    total_tasks = df['TasksCompleted'].sum()

    # Trends
    perf_trend = df.groupby('Month')['PerformanceScore'].mean().reset_index()
    tasks_trend = df.groupby('Month')['TasksCompleted'].sum().reset_index()

    # Visualizations
    fig_perf = px.line(perf_trend, x='Month', y='PerformanceScore', title='Monthly Avg Performance Score')
    fig_tasks = px.bar(tasks_trend, x='Month', y='TasksCompleted', title='Monthly Tasks Completed')

    perf_graph = fig_perf.to_html(full_html=False)
    tasks_graph = fig_tasks.to_html(full_html=False)

    return render_template('results.html', avg_perf=avg_perf,
                           total_tasks=total_tasks,
                           perf_graph=perf_graph,
                           tasks_graph=tasks_graph)

if __name__ == '__main__':
    app.run(debug=True)
